import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Qt.labs.platform 1.0'

Module {
    dependencies: ["QtQuick 2.7"]
    Component {
        name: "QQuickPlatformColorDialog"
        defaultProperty: "data"
        prototype: "QQuickPlatformDialog"
        exports: ["Qt.labs.platform/ColorDialog 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "currentColor"; type: "QColor" }
        Property { name: "options"; type: "QColorDialogOptions::ColorDialogOptions" }
        Signal {
            name: "colorSelected"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "QQuickPlatformDialog"
        defaultProperty: "data"
        prototype: "QObject"
        exports: ["Qt.labs.platform/Dialog 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "parentWindow"; type: "QWindow"; isPointer: true }
        Property { name: "title"; type: "string" }
        Property { name: "flags"; type: "Qt::WindowFlags" }
        Property { name: "modality"; type: "Qt::WindowModality" }
        Property { name: "visible"; type: "bool" }
        Signal { name: "accepted" }
        Signal { name: "rejected" }
        Method { name: "open" }
        Method { name: "close" }
        Method { name: "accept" }
        Method { name: "reject" }
    }
    Component {
        name: "QQuickPlatformFileDialog"
        defaultProperty: "data"
        prototype: "QQuickPlatformDialog"
        exports: ["Qt.labs.platform/FileDialog 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "FileMode"
            values: {
                "OpenFile": 0,
                "OpenFiles": 1,
                "SaveFile": 2
            }
        }
        Property { name: "fileMode"; type: "FileMode" }
        Property { name: "currentFile"; type: "QUrl" }
        Property { name: "options"; type: "QFileDialogOptions::FileDialogOptions" }
        Property { name: "nameFilters"; type: "QStringList" }
        Property { name: "defaultSuffix"; type: "string" }
        Property { name: "acceptLabel"; type: "string" }
        Property { name: "rejectLabel"; type: "string" }
        Signal {
            name: "fileSelected"
            Parameter { name: "file"; type: "QUrl" }
        }
        Signal {
            name: "filesSelected"
            Parameter { name: "files"; type: "QList<QUrl>" }
        }
    }
    Component {
        name: "QQuickPlatformFolderDialog"
        defaultProperty: "data"
        prototype: "QQuickPlatformDialog"
        exports: ["Qt.labs.platform/FolderDialog 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "currentFolder"; type: "QUrl" }
        Property { name: "options"; type: "QFileDialogOptions::FileDialogOptions" }
        Property { name: "acceptLabel"; type: "string" }
        Property { name: "rejectLabel"; type: "string" }
        Signal {
            name: "folderSelected"
            Parameter { name: "folder"; type: "QUrl" }
        }
        Signal {
            name: "foldersSelected"
            Parameter { name: "folders"; type: "QList<QUrl>" }
        }
    }
    Component {
        name: "QQuickPlatformFontDialog"
        defaultProperty: "data"
        prototype: "QQuickPlatformDialog"
        exports: ["Qt.labs.platform/FontDialog 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "currentFont"; type: "QFont" }
        Property { name: "options"; type: "QFontDialogOptions::FontDialogOptions" }
        Signal {
            name: "fontSelected"
            Parameter { name: "font"; type: "QFont" }
        }
    }
    Component {
        name: "QQuickPlatformMenu"
        defaultProperty: "data"
        prototype: "QObject"
        exports: ["Qt.labs.platform/Menu 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "items"; type: "QQuickPlatformMenuItem"; isList: true; isReadonly: true }
        Property { name: "menuBar"; type: "QQuickPlatformMenuBar"; isReadonly: true; isPointer: true }
        Property { name: "parentMenu"; type: "QQuickPlatformMenu"; isReadonly: true; isPointer: true }
        Property {
            name: "systemTrayIcon"
            type: "QQuickPlatformSystemTrayIcon"
            isReadonly: true
            isPointer: true
        }
        Property { name: "menuItem"; type: "QQuickPlatformMenuItem"; isReadonly: true; isPointer: true }
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "minimumWidth"; type: "int" }
        Property { name: "type"; type: "QPlatformMenu::MenuType" }
        Property { name: "title"; type: "string" }
        Property { name: "iconSource"; type: "QUrl" }
        Property { name: "iconName"; type: "string" }
        Property { name: "font"; type: "QFont" }
        Signal { name: "aboutToShow" }
        Signal { name: "aboutToHide" }
        Method {
            name: "open"
            Parameter { name: "args"; type: "QQmlV4Function"; isPointer: true }
        }
        Method { name: "close" }
        Method {
            name: "addItem"
            Parameter { name: "item"; type: "QQuickPlatformMenuItem"; isPointer: true }
        }
        Method {
            name: "insertItem"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "item"; type: "QQuickPlatformMenuItem"; isPointer: true }
        }
        Method {
            name: "removeItem"
            Parameter { name: "item"; type: "QQuickPlatformMenuItem"; isPointer: true }
        }
        Method {
            name: "addMenu"
            Parameter { name: "menu"; type: "QQuickPlatformMenu"; isPointer: true }
        }
        Method {
            name: "insertMenu"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "menu"; type: "QQuickPlatformMenu"; isPointer: true }
        }
        Method {
            name: "removeMenu"
            Parameter { name: "menu"; type: "QQuickPlatformMenu"; isPointer: true }
        }
        Method { name: "clear" }
    }
    Component {
        name: "QQuickPlatformMenuBar"
        defaultProperty: "data"
        prototype: "QObject"
        exports: ["Qt.labs.platform/MenuBar 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "menus"; type: "QQuickPlatformMenu"; isList: true; isReadonly: true }
        Property { name: "window"; type: "QWindow"; isPointer: true }
        Method {
            name: "addMenu"
            Parameter { name: "menu"; type: "QQuickPlatformMenu"; isPointer: true }
        }
        Method {
            name: "insertMenu"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "menu"; type: "QQuickPlatformMenu"; isPointer: true }
        }
        Method {
            name: "removeMenu"
            Parameter { name: "menu"; type: "QQuickPlatformMenu"; isPointer: true }
        }
        Method { name: "clear" }
    }
    Component {
        name: "QQuickPlatformMenuItem"
        prototype: "QObject"
        exports: ["Qt.labs.platform/MenuItem 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "menu"; type: "QQuickPlatformMenu"; isReadonly: true; isPointer: true }
        Property { name: "subMenu"; type: "QQuickPlatformMenu"; isReadonly: true; isPointer: true }
        Property { name: "group"; type: "QQuickPlatformMenuItemGroup"; isPointer: true }
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "separator"; type: "bool" }
        Property { name: "checkable"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "role"; type: "QPlatformMenuItem::MenuRole" }
        Property { name: "text"; type: "string" }
        Property { name: "iconSource"; type: "QUrl" }
        Property { name: "iconName"; type: "string" }
        Property { name: "shortcut"; type: "QVariant" }
        Property { name: "font"; type: "QFont" }
        Signal { name: "triggered" }
        Signal { name: "hovered" }
        Method { name: "toggle" }
    }
    Component {
        name: "QQuickPlatformMenuItemGroup"
        prototype: "QObject"
        exports: ["Qt.labs.platform/MenuItemGroup 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "exclusive"; type: "bool" }
        Property { name: "checkedItem"; type: "QQuickPlatformMenuItem"; isPointer: true }
        Property { name: "items"; type: "QQuickPlatformMenuItem"; isList: true; isReadonly: true }
        Signal {
            name: "triggered"
            Parameter { name: "item"; type: "QQuickPlatformMenuItem"; isPointer: true }
        }
        Signal {
            name: "hovered"
            Parameter { name: "item"; type: "QQuickPlatformMenuItem"; isPointer: true }
        }
        Method {
            name: "addItem"
            Parameter { name: "item"; type: "QQuickPlatformMenuItem"; isPointer: true }
        }
        Method {
            name: "removeItem"
            Parameter { name: "item"; type: "QQuickPlatformMenuItem"; isPointer: true }
        }
        Method { name: "clear" }
    }
    Component {
        name: "QQuickPlatformMessageDialog"
        defaultProperty: "data"
        prototype: "QQuickPlatformDialog"
        exports: ["Qt.labs.platform/MessageDialog 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "text"; type: "string" }
        Property { name: "informativeText"; type: "string" }
        Property { name: "detailedText"; type: "string" }
        Property { name: "buttons"; type: "QPlatformDialogHelper::StandardButtons" }
        Signal {
            name: "clicked"
            Parameter { name: "button"; type: "QPlatformDialogHelper::StandardButton" }
        }
    }
    Component {
        name: "QQuickPlatformSystemTrayIcon"
        prototype: "QObject"
        exports: ["Qt.labs.platform/SystemTrayIcon 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "available"; type: "bool"; isReadonly: true }
        Property { name: "supportsMessages"; type: "bool"; isReadonly: true }
        Property { name: "visible"; type: "bool" }
        Property { name: "iconSource"; type: "QUrl" }
        Property { name: "iconName"; type: "string" }
        Property { name: "tooltip"; type: "string" }
        Property { name: "menu"; type: "QQuickPlatformMenu"; isPointer: true }
        Signal {
            name: "activated"
            Parameter { name: "reason"; type: "QPlatformSystemTrayIcon::ActivationReason" }
        }
        Signal { name: "messageClicked" }
        Method { name: "show" }
        Method { name: "hide" }
        Method {
            name: "showMessage"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "message"; type: "string" }
            Parameter { name: "iconType"; type: "QPlatformSystemTrayIcon::MessageIcon" }
            Parameter { name: "msecs"; type: "int" }
        }
        Method {
            name: "showMessage"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "message"; type: "string" }
            Parameter { name: "iconType"; type: "QPlatformSystemTrayIcon::MessageIcon" }
        }
        Method {
            name: "showMessage"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "message"; type: "string" }
        }
    }
}
